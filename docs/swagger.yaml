basePath: /
definitions:
  main.HTTPError:
    type: object
  route.HTTPError:
    type: object
  route.Order:
    properties:
      id:
        type: integer
      order_date:
        type: string
      product:
        $ref: '#/definitions/route.Product'
      user:
        $ref: '#/definitions/route.User'
    type: object
  route.Product:
    properties:
      id:
        type: integer
      name:
        type: string
      serial_number:
        type: string
    type: object
  route.User:
    properties:
      firstname:
        type: string
      id:
        type: integer
      lastname:
        type: string
    type: object
host: localhost:4000
info:
  contact:
    email: mail.asktech@gmail.com
    name: API Support
  description: Go-Fiber implementation of the e-commerce
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Ecommerce Api using Go Fiber
  version: "1.0"
paths:
  /api/:
    get:
      description: show the welcome page
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.HTTPError'
  /api/orders/:
    get:
      description: Get all Orders
      operationId: GetOrders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/route.Order'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.HTTPError'
    post:
      description: create new Order
      operationId: CreateOrder
      parameters:
      - in: formData
        name: id
        type: integer
      - in: formData
        name: order_date
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/route.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.HTTPError'
  /api/products/:
    get:
      description: Get all Products
      operationId: GetProducts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/route.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.HTTPError'
    post:
      description: create new product
      operationId: CreateProduct
      parameters:
      - in: formData
        name: id
        type: integer
      - in: formData
        name: name
        type: string
      - in: formData
        name: serial_number
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/route.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.HTTPError'
  /api/products/{id}:
    delete:
      description: Delete a Product
      operationId: DeleteProduct
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/route.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.HTTPError'
    get:
      description: Get a single Product
      operationId: GetProduct
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/route.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.HTTPError'
    put:
      description: Update a Product
      operationId: UpdateProduct
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - in: formData
        name: id
        type: integer
      - in: formData
        name: name
        type: string
      - in: formData
        name: serial_number
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/route.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.HTTPError'
  /api/users/:
    get:
      description: Get all users
      operationId: GetUsers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/route.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/route.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.HTTPError'
    post:
      description: create new user
      operationId: CreateUser
      parameters:
      - in: formData
        name: firstname
        type: string
      - in: formData
        name: id
        type: integer
      - in: formData
        name: lastname
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/route.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.HTTPError'
  /api/users/{id}:
    delete:
      description: Delete a user
      operationId: DeleteUser
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/route.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.HTTPError'
    get:
      description: Get a single user
      operationId: '"GetUser"'
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/route.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.HTTPError'
    put:
      description: Update a user
      operationId: UpdateUser
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - in: formData
        name: firstname
        type: string
      - in: formData
        name: id
        type: integer
      - in: formData
        name: lastname
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/route.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/route.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/route.HTTPError'
swagger: "2.0"
